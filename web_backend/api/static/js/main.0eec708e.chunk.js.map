{"version":3,"sources":["assets/audio/alert.wav","components/AuthService.js","components/auth/LoginBox.js","components/layouts/Header.js","components/auth/Login.js","components/auth/SignupBox.js","components/auth/Signup.js","components/layouts/Sidebar.js","components/dashboard/API.js","components/dashboard/DismissModal.js","components/dashboard/Notification.js","components/dashboard/HistoricalBet.js","components/dashboard/PeriodBoard.js","components/dashboard/Summary.js","components/dashboard/AddAccountModal.js","components/dashboard/AccountPanel.js","components/dashboard/Account.js","components/dashboard/Dashboard.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","domain","_this","this","Object","classCallCheck","login","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","res","wrap","_context","prev","next","fetch","method","body","JSON","stringify","sent","_","isNil","token","setToken","abrupt","stop","_x","_x2","apply","arguments","register","_ref2","_callee2","data","_context2","_x3","_ref3","_callee3","url","options","headers","response","_context3","Content-Type","loggedIn","getToken","objectSpread","timeout","catch","error","console","log","json","t0","_x4","_x5","idToken","window","localStorage","setItem","getItem","removeItem","Auth","LoginBox","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","handleSubmit","preventDefault","validate","state","first","keys","error_msg","values","history","replace","logged_in","id","react_default","createElement","Form","FormGroup","className","isEmpty","Alert","color","Label","for","Input","type","onChange","Button","onClick","React","Component","withRouter","Header","toggle","bind","assertThisInitialized","isOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Login","Fragment","layouts_Header","Container","fluid","Row","Col","md","auth_LoginBox","SignupBox","confirm_password","undefined","push","Signup","auth_SignupBox","Sidebar","on_select","tab","selected","tab_changed","on_expand_change","expanded","expanded_changed","onLogout","logout","user","lib_default","onToggle","onSelect","Toggle","lib","eventKey","react_fontawesome_index_es","icon","faBell","faHistory","faStickyNote","faPiggyBank","faSignOutAlt","auth","get_notifications","_get_notifications","resp","get_accounts","_get_accounts","create_account","_create_account","account","remove_all_accounts","_remove_all_accounts","_callee4","_context4","remove_account","_remove_account","_callee5","_context5","concat","_callee6","note_id","_context6","delete_notification","_delete_notification","_callee7","_context7","get_historical_bets","_get_historical_bets","_callee8","_context8","get_summary","_x6","_x7","_get_summary","_callee9","start_date","end_date","_args9","_context9","length","add_transaction","_x8","_add_transaction","_callee10","_context10","get_account_summary","_x9","_x10","_get_account_summary","_callee11","_args11","_context11","DismissModal","on_ok","validator","allValid","price","parseFloat","stake","amount","_dismiss_notification","dismiss_notification","notification","price_taken","bet_amount","result","max_profit","status","showMessages","on_cancel","show_modal","accounts","SimpleReactValidator","_this2","Modal","backdrop","ModalHeader","ModalBody","react_dropdown_select_lib_default","placeholder","labelField","valueField","message","ModalFooter","requestData","pageSize","page","sorted","filtered","filteredData","sortedData","reduce","filteredSoFar","nextFilter","filter","row","includes","orderBy","map","sort","Infinity","toLowerCase","d","desc","rows","slice","pages","Math","ceil","Notification","fetch_data","instance","is_mounted","is_first","update_data","refReactTable","fireFetchData","render_dismiss_btn","cellInfo","style","width","height","cur_note","index","render_delete_btn","confirmAlert","title","buttons","label","_onClick","toggle_modal","prevState","handleData","raw_data","parse","content","alert","play","Sound","PLAYING","auto_update","STOPPED","position","react_sound_lib_default","alertsound","playStatus","autoLoad","volume","loop","onFinishedPlaying","debug","build_default","onMessage","dashboard_DismissModal","es","ref","manual","onFetchData","showPaginationTop","showPaginationBottom","showPagination","pageSizeOptions","defaultPageSize","filterable","defaultFilterMethod","column","String","columns","Cell","accessor","minWidth","dateformat","textAlign","getProps","background","floor","HistoricalBet","render_result_cell","Badge","pill","ref_tbl","PeriodBoard","apply_daterange","from","to","range_changed","start","end","now","Date","moment","getFullYear","getMonth","getDate","add","subtract","ranges","Today Only","Yesterday Only","3 Days","maxDate","dist_default","display","local","format","sundayFirst","applyCallback","dateFormat","Summary","daterange_changed","ref_table","marginLeft","dashboard_PeriodBoard","loading","AddAccountModal","refresh_accounts","AccountPanel","account_changed_handler","add_new_account","open_add_modal","show_alert_pop","alert_pop","ToastsStore","success","on_confirm","react_bootstrap_sweetalert_default","onCancel","onConfirm","confirmBtnBsStyle","cancelBtnBsStyle","showCancel","btnSize","render_edit_btn","render_remove_btn","deposit","diff","cur_account","deposit_amount","deposit_direction","date","cur_date","action","withdraw","withdraw_amount","withdraw_direction","adjust","adjust_amount","set_actual_closing","actual_closing","toggle_add_modal","react_toasts_lib","store","dashboard_AddAccountModal","esm","fetch_accounts","entry_default","clearIcon","marginTop","all_accounts","Account","account_changed","dashboard_AccountPanel","Dashboard","new_tab","layouts_Sidebar","react_live_clock_lib_default","ticking","dashboard_Notification","dashboard_HistoricalBet","dashboard_Summary","dashboard_Account","App","react_router_dom","App_PrivateRoute","exact","path","component","dashboard_Dashboard","react_router","auth_Login","PrivateRoute","rest","objectWithoutProperties","assign","render","pathname","location","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","components_App","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0eec708e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.36ecd3c9.wav\";","import _ from 'lodash'\r\n\r\nexport default class AuthService {\r\n\r\n    constructor(domain) {\r\n        this.domain = domain || '' // API server domain\r\n    }\r\n\r\n    login = async (username, password) => {\r\n\r\n        // Get a token from api server using the fetch api\r\n        let res = await this.fetch(`/api/auth`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        })\r\n\r\n        \r\n        if(!_.isNil(res.token)){\r\n            this.setToken(res.token) // Setting the token in localStorage\r\n        }\r\n        \r\n        return res\r\n    }\r\n\r\n    register = async (data) => {\r\n        let res = await this.fetch(`/api/register`, {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n        return res\r\n    }\r\n\r\n    loggedIn() {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken() // Getting token from localstorage\r\n        return !!token\r\n    }\r\n\r\n    setToken(idToken) {\r\n        // Saves user token to localStorage\r\n        window.localStorage.setItem('token', idToken)\r\n    }\r\n\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return window.localStorage.getItem('token')\r\n    }\r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        window.localStorage.removeItem('token')\r\n    }\r\n\r\n    fetch = async (url, options) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        // Setting Authorization header\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Token ' + this.getToken()\r\n        }\r\n\r\n        try{\r\n            let response = await fetch(url, {\r\n                headers,\r\n                timeout: 500,\r\n                ...options\r\n            }).catch(error => console.log(error))\r\n            return response.json()\r\n        }\r\n        catch(err)\r\n        {\r\n            return []\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\r\nimport AuthService from '../AuthService';\r\nimport _ from 'lodash'\r\n\r\nconst Auth = new AuthService();\r\n\r\nclass LoginBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: '',\r\n            error_msg: ''\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (this.validate()) {\r\n            let res = await Auth.login(this.state.username, this.state.password)\r\n            if (!_.isNil(res.token)) {\r\n                this.props.history.replace('/dashboard')\r\n                this.props.logged_in({\r\n                    username: this.state.username,\r\n                    id: res.id\r\n                })\r\n            }\r\n            else\r\n                this.setState({\r\n                    error: _.first(_.keys(res)),\r\n                    error_msg: _.first(_.values(res))\r\n                });\r\n        }\r\n    }\r\n\r\n    validate = () => {\r\n        if (this.state.username === '') {\r\n            this.setState({ error: 'username', error_msg: 'Please input your username.' });\r\n            return false;\r\n        }\r\n        if (this.state.password === '') {\r\n            this.setState({ error: 'password', error_msg: 'Please input your password.' });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <h1>Log in</h1>\r\n                <FormGroup className={_.isEmpty(this.state.error) ? 'hidden' : ''}>\r\n                    <Alert color=\"danger\">{this.state.error_msg}</Alert>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"username\">User Name</Label>\r\n                    <Input type=\"username\" name=\"username\" id=\"username\" onChange={this.handleChange} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Password</Label>\r\n                    <Input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </FormGroup>\r\n                <Button onClick={this.handleSubmit}>Login</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginBox);","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" light expand=\"md\">\r\n                    <NavbarBrand href=\"/\">Horse Racing Odds Notification</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink href=\"/login\">Login</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/signup\">Sign Up</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport LoginBox from './LoginBox';\r\nimport Header from 'components/layouts/Header';\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid className=\"mt-100 mb-100\">\r\n          <Row>\r\n            <Col md='4' />\r\n            <Col md='4'><LoginBox logged_in={this.props.logged_in}></LoginBox></Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\nimport AuthService from '../AuthService';\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\r\nimport _ from 'lodash'\r\n\r\nconst Auth = new AuthService();\r\n\r\nclass SignupBox extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            error: '',\r\n            error_msg: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    validate = () => {\r\n        if(this.state.password !== this.state.confirm_password){\r\n            this.setState({error: 'password', error_msg: 'The password does not match with confirm password.'});\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({error:''});\r\n        if(this.validate()){\r\n            let data = JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            })\r\n            let res = await Auth.register(data)\r\n                \r\n            if(res.id === undefined){\r\n                this.setState({\r\n                        error: _.first(_.keys(res)), \r\n                        error_msg: _.first(_.values(res))\r\n                });\r\n            }\r\n            else {\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n    return (\r\n        <Form>\r\n            <h1>Register</h1>\r\n            <FormGroup className = {_.isEmpty(this.state.error)?'hidden':''}>\r\n                <Alert color=\"danger\">{this.state.error_msg}</Alert>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"username\">User Name</Label>\r\n                <Input type=\"username\" name=\"username\" id=\"username\" onChange={this.handleChange}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"password\">Password</Label>\r\n                <Input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"confirm_password\">Confirm Password</Label>\r\n                <Input type=\"password\" name=\"confirm_password\" id=\"confirm_password\" onChange={this.handleChange}/>\r\n            </FormGroup>\r\n            <Button onClick={this.handleSubmit}>Sign Up</Button>\r\n        </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignupBox);","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport SignupBox from './SignupBox';\r\nimport Header from 'components/layouts/Header'\r\n\r\nclass Signup extends React.Component {\r\n    render() {\r\n    return (\r\n      <>\r\n        <Header/>\r\n        <Container fluid className=\"mt-100 mb-100\">\r\n          <Row>\r\n              <Col md='4'/>\r\n              <Col md='4'><SignupBox></SignupBox></Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport AuthService from '../AuthService';\r\nimport { faBell, faStickyNote, faHistory, faPiggyBank, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Auth = new AuthService();\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: 'Historical Bets',\r\n            expanded: false,\r\n            user: null\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        return {\r\n            selected: props.tab,\r\n            expanded: props.expanded,\r\n            user: props.user\r\n        };\r\n    }\r\n\r\n    on_select = (tab) => {\r\n        this.setState({ selected: tab });\r\n        if (tab) {\r\n            this.props.tab_changed(tab);\r\n        }\r\n    }\r\n\r\n    on_expand_change = (expanded) => {\r\n        this.setState({expanded: expanded});\r\n        this.props.expanded_changed(expanded);\r\n    }\r\n\r\n    render() {\r\n        const { selected } = this.state;\r\n        return (\r\n            <>\r\n                <SideNav onToggle = {this.on_expand_change} onSelect={this.on_select} className='sideNav'>\r\n                    <SideNav.Toggle />\r\n                    <SideNav.Nav className='sideNavPanel' selected={selected}>\r\n                        <NavItem eventKey=\"Notification\">\r\n                            <NavIcon>\r\n                                <FontAwesomeIcon icon={faBell} />\r\n                            </NavIcon>\r\n                            <NavText>\r\n                                Notification\r\n                            </NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"Historical Bets\">\r\n                            <NavIcon>\r\n                                <FontAwesomeIcon icon={faHistory} />\r\n                            </NavIcon>\r\n                            <NavText>\r\n                                Historical Bets\r\n                            </NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"Summary\">\r\n                            <NavIcon>\r\n                                <FontAwesomeIcon icon={faStickyNote} />\r\n                            </NavIcon>\r\n                            <NavText>\r\n                                Summary\r\n                            </NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"Account\" >\r\n                            <NavIcon>\r\n                                <FontAwesomeIcon icon={faPiggyBank} />\r\n                            </NavIcon>\r\n                            <NavText>\r\n                                Account\r\n                            </NavText>\r\n                        </NavItem>\r\n                        <NavItem onClick={this.onLogout} className='LogOutNavItem'>\r\n                            <NavIcon>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />\r\n                            </NavIcon>\r\n                            <NavText>\r\n                                Log out ({this.state.user?this.state.user.username:''})\r\n                            </NavText>\r\n                        </NavItem>\r\n                    </SideNav.Nav>\r\n                </SideNav>\r\n            </>\r\n        );\r\n    }\r\n\r\n    onLogout = () => {\r\n        Auth.logout();\r\n        this.props.history.push('/');\r\n    }\r\n}\r\n\r\nexport default withRouter(Sidebar);","import AuthService from \"components/AuthService\";\r\n\r\nconst auth = new AuthService()\r\n\r\nexport async function get_notifications() {\r\n    let resp = await auth.fetch('/api/pendingnotifications',\r\n        {\r\n            method: 'GET'\r\n        })\r\n    return resp\r\n}\r\n\r\nexport async function get_accounts() {\r\n    let resp = await auth.fetch(`/api/accounts`,\r\n        {\r\n            method: 'GET'\r\n        })\r\n    return resp\r\n}\r\n\r\nexport async function create_account(account) {\r\n    let resp = await auth.fetch('/api/accounts',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify(account)\r\n    })\r\n    return resp\r\n}\r\n\r\n\r\nexport async function remove_all_accounts() {\r\n    let resp = await auth.fetch(`/api/accounts`,\r\n    {\r\n        method: 'DELETE'\r\n    })\r\n    return resp\r\n}\r\n\r\nexport async function remove_account(account) {\r\n    let resp = await auth.fetch(`/api/accounts/${account}`,\r\n    {\r\n        method: 'DELETE'\r\n    })\r\n    return resp\r\n}\r\n\r\nexport async function dismiss_notification(note_id, data)\r\n{\r\n    let resp = await auth.fetch(`/api/notifications/${note_id}`,\r\n    {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data)\r\n    })\r\n    return resp\r\n}\r\n\r\n\r\nexport async function delete_notification(note_id)\r\n{\r\n    let resp = await auth.fetch(`/api/notifications/${note_id}`,\r\n    {\r\n        method: 'DELETE'\r\n    })\r\n    return resp\r\n}\r\n\r\nexport async function get_historical_bets() {\r\n    let resp = await auth.fetch('/api/history',\r\n    {\r\n        method: 'GET'\r\n    })\r\n    return resp\r\n}\r\n\r\nexport async function get_summary(start_date, end_date, len = 5000) {\r\n    let resp = await auth.fetch('/api/summary',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'start_date': start_date,\r\n            'end_date': end_date\r\n        })\r\n    })\r\n    return resp\r\n}\r\n\r\nexport async function add_transaction(data) {\r\n    let resp = await auth.fetch('/api/transactions',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    })\r\n    return resp\r\n}\r\n\r\nexport async function get_account_summary(start_date, end_date, len = 5000) {\r\n    let resp = await auth.fetch('/api/account_summary',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'start_date': start_date,\r\n            'end_date': end_date\r\n        })\r\n    })\r\n    return resp\r\n}\r\n","import React from 'react';\r\nimport { dismiss_notification } from './API'\r\nimport { Button, Form, FormGroup, Label, Input, Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport _ from 'lodash'\r\nimport SimpleReactValidator from 'simple-react-validator'\r\nimport Select from 'react-dropdown-select'\r\n\r\nclass DismissModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            notification: {},\r\n            show_modal: false,\r\n            error:'',\r\n            error_msg:'',\r\n            account:'',\r\n            price:null,\r\n            amount:null,\r\n            accounts:[]\r\n        };\r\n\r\n        this.validator = new SimpleReactValidator()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return { \r\n            notification: props.data, \r\n            show_modal: props.show_modal,\r\n            accounts: props.accounts\r\n        }\r\n    }\r\n\r\n    on_ok = () =>{\r\n        if(!this.validator.allValid())\r\n            this.validator.showMessages()\r\n        else\r\n        {\r\n            let price = parseFloat(this.state.price)\r\n            let stake = parseFloat(this.state.amount)\r\n            dismiss_notification(this.state.notification.id, {\r\n                account: this.state.account.id,\r\n                price_taken: price,\r\n                bet_amount: stake,\r\n                result: \"Pending\",\r\n                max_profit: (price - 1) * stake,\r\n                status: 1\r\n            })\r\n            this.props.toggle();    \r\n        }\r\n    }\r\n\r\n    on_cancel = () =>{\r\n        this.props.toggle();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.state.show_modal} \r\n                data={{ name: 'OK' }}\r\n                backdrop={true}>\r\n                <ModalHeader toggle={this.toggle}>Dismiss notification {this.state.notification.id}</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup className = {_.isEmpty(this.state.error)?'hidden':''}>\r\n                            <Alert color=\"danger\">{this.state.error_msg}</Alert>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"account\">Account</Label>\r\n                            <Select options = {this.state.accounts} onChange = {(values)=>{if(values.length>0)this.setState({account:values[0]})}} placeholder='Select an account' labelField='name' valueField='id'/>\r\n                            {this.validator.message('account', this.state.account, 'required')}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"price\">Price taken</Label>\r\n                            <Input type=\"price\" name=\"price\" id=\"price\" onChange={this.handleChange}/>\r\n                            {this.validator.message('price', this.state.price, 'required|currency')}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"amount\">Bet amount</Label>\r\n                            <Input type=\"amount\" name=\"amount\" id=\"amount\" onChange={this.handleChange}/>\r\n                            {this.validator.message('amount', this.state.amount, 'required|currency')}\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.on_ok}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.on_cancel}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DismissModal;","import React from 'react';\r\nimport { get_notifications, delete_notification } from './API'\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport _ from \"lodash\";\r\nimport DismissModal from './DismissModal';\r\nimport dateformat from 'dateformat'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport WebSocket from 'react-websocket'\r\nimport Sound from 'react-sound'\r\nimport alertsound from '../../assets/audio/alert.wav'\r\n\r\nconst requestData = async (pageSize, page, sorted, filtered) => {\r\n    let filteredData = await get_notifications();\r\n    // You can use the filters in your request, but you are responsible for applying them.\r\n    if (filtered.length) {\r\n        filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\r\n            return filteredSoFar.filter(row => {\r\n                return (row[nextFilter.id] + \"\").includes(nextFilter.value);\r\n            });\r\n        }, filteredData);\r\n    }\r\n\r\n    // You can also use the sorting in your request, but again, you are responsible for applying it.\r\n    const sortedData = _.orderBy(\r\n        filteredData,\r\n        sorted.map(sort => {\r\n            return row => {\r\n                if (row[sort.id] === null || row[sort.id] === undefined) {\r\n                    return -Infinity;\r\n                }\r\n                return typeof row[sort.id] === \"string\"\r\n                    ? row[sort.id].toLowerCase()\r\n                    : row[sort.id];\r\n            };\r\n        }),\r\n        sorted.map(d => (d.desc ? \"desc\" : \"asc\"))\r\n    );\r\n\r\n    const res = {\r\n        rows: sortedData.slice(pageSize * page, pageSize * page + pageSize),\r\n        pages: Math.ceil(filteredData.length / pageSize)\r\n    };\r\n\r\n    return res;\r\n};\r\n\r\nclass Notification extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.refReactTable = null\r\n        this.is_mounted = false\r\n        this.is_first = true\r\n        this.state = {\r\n            auto_update: true,\r\n            data: [],\r\n            page: 0,\r\n            pages: null,\r\n            show_modal: false,\r\n            cur_note: {},\r\n            accounts: [],\r\n            play:Sound.status.STOPPED,\r\n            position: 0\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return { accounts: props.accounts }\r\n    }\r\n\r\n    fetch_data = async (state, instance) => {\r\n        if (!this.is_mounted && !this.is_first)\r\n            return\r\n\r\n        let res = await requestData(\r\n            state.pageSize,\r\n            state.page,\r\n            state.sorted,\r\n            state.filtered\r\n        );\r\n\r\n        if (this.is_mounted) {\r\n            this.setState({\r\n                data: res.rows,\r\n                pages: res.pages,\r\n                page: state.page\r\n            });\r\n            this.is_first = false\r\n        }\r\n    }\r\n\r\n    update_data = () =>{\r\n        if(!_.isNil(this.refReactTable))\r\n            this.refReactTable.fireFetchData()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.is_mounted = true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.is_mounted = false\r\n    }\r\n\r\n    render_dismiss_btn = (cellInfo) => {\r\n        return (\r\n            <button type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                style={{ width: '100%', height: '100%' }}\r\n                onClick={e => {\r\n                    this.setState({\r\n                        cur_note: this.state.data[cellInfo.index],\r\n                        show_modal: true\r\n                    });\r\n                }}\r\n            >\r\n                Dismiss\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render_delete_btn = (cellInfo) => {\r\n        return (\r\n            <button type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                style={{ width: '100%', height: '100%' }}\r\n                onClick={e => {\r\n                    confirmAlert({\r\n                        title: 'Confirm',\r\n                        message: 'Are you sure to remove this notification?',\r\n                        buttons: [\r\n                            {\r\n                                label: 'Yes',\r\n                                onClick: async () => {\r\n                                    await delete_notification(this.state.data[cellInfo.index].id)\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'No'\r\n                            }\r\n                        ]\r\n                    })\r\n                }}\r\n            >\r\n                Delete\r\n            </button>\r\n        );\r\n    }\r\n\r\n    toggle_modal = () => {\r\n        this.setState(prevState => ({\r\n            show_modal: !prevState.show_modal\r\n        }));\r\n    }\r\n\r\n    handleData = (raw_data) => {\r\n        console.log(raw_data)\r\n        let data = JSON.parse(raw_data)\r\n        if(data.content === 'update_notification')\r\n            this.update_data()\r\n        if(data.alert === true)\r\n            this.setState({\r\n                play: Sound.status.PLAYING\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Sound url = {alertsound}\r\n                    playStatus={this.state.play}\r\n                    autoLoad={true}\r\n                    volume = {100}\r\n                    loop = {false}\r\n                    onFinishedPlaying = {()=>{this.setState({\r\n                        play: Sound.status.STOPPED\r\n                    })}}\r\n                    debug = {false}\r\n                />\r\n                <WebSocket \r\n                    url = {'ws://127.0.0.1:8000/ws/update/'} \r\n                    onMessage = {this.handleData}\r\n                    debug = {true}\r\n                />\r\n                <DismissModal data={this.state.cur_note} show_modal={this.state.show_modal} toggle={this.toggle_modal} accounts={this.state.accounts} />\r\n                <ReactTable\r\n                    ref={(refReactTable) => { this.refReactTable = refReactTable; }}\r\n                    manual\r\n                    onFetchData={this.fetch_data}\r\n                    data={this.state.data}\r\n                    page={this.state.page}\r\n                    pages={this.state.pages}\r\n                    showPaginationTop={true}\r\n                    showPaginationBottom={true}\r\n                    showPagination={true}\r\n                    pageSizeOptions ={[5, 10, 15, 20, 50, 100]}\r\n                    defaultPageSize={15}\r\n                    filterable\r\n                    defaultFilterMethod={(filter, row, column) => {\r\n                        const id = filter.id\r\n                        return row[id] !== undefined ? String(row[id]).includes(filter.value) : true\r\n                    }}\r\n                    columns={[\r\n                        {\r\n                            Header: \"Dismiss\",\r\n                            filterable: false,\r\n                            Cell: this.render_dismiss_btn\r\n                        },\r\n                        {\r\n                            Header: \"Delete\",\r\n                            filterable: false,\r\n                            Cell: this.render_delete_btn\r\n                        },\r\n                        {\r\n                            Header: \"No\",\r\n                            accessor: \"id\",\r\n                            filterable: false,\r\n                            minWidth: 50,\r\n                        },\r\n                        {\r\n                            Header: \"Date\",\r\n                            accessor: \"datetime\",\r\n                            Cell: row => dateformat(row.value, 'yyyy-mm-dd'),\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"Time\",\r\n                            accessor: \"datetime\",\r\n                            Cell: row => dateformat(row.value, 'HH:MM:ss'),\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"Time to Jump\",\r\n                            accessor: \"time_to_jump\",\r\n                        },\r\n                        {\r\n                            Header: \"Degree\",\r\n                            accessor: \"degree\",\r\n                            minWidth: 70,\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"State\",\r\n                            accessor: \"state\",\r\n                            minWidth: 70,\r\n                        },\r\n                        {\r\n                            Header: \"Venue\",\r\n                            accessor: \"venue\",\r\n                        },\r\n                        {\r\n                            Header: \"Race\",\r\n                            accessor: \"race_number\",\r\n                            minWidth: 70,\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"Horse No\",\r\n                            accessor: \"horse_number\",\r\n                            minWidth: 80,\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"Horse Name\",\r\n                            accessor: \"horse_name\",\r\n                            minWidth: 100,\r\n                            style: { textAlign: 'left' }\r\n                        },\r\n                        {\r\n                            Header: \"Previous\",\r\n                            accessor: \"previous_price\",\r\n                            minWidth: 70,\r\n                            getProps: (state, row, column) => {\r\n                                return {\r\n                                    style: {\r\n                                        background: (row ? '#C8F0D1':'#FFFFFF'),\r\n                                        textAlign: 'center' \r\n                                    },\r\n                                };\r\n                            }\r\n                        },\r\n                        {\r\n                            Header: \"Current\",\r\n                            accessor: \"current_price\",\r\n                            minWidth: 70,\r\n                            getProps: (state, row, column) => {\r\n                                return {\r\n                                    style: {\r\n                                        background: (row ? '#4FCF6C':'#FFFFFF'),\r\n                                        textAlign: 'center' \r\n                                    },\r\n                                };\r\n                            }\r\n                        },\r\n                        {\r\n                            Header: \"Bookie\",\r\n                            accessor: \"bookie\",\r\n                        },\r\n                        {\r\n                            Header: \"Suggested Stake\",\r\n                            accessor: \"suggested_stake\",\r\n                            Cell: row => _.floor(parseFloat(row.value), 2),\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"Max Profit\",\r\n                            accessor: \"max_profit\",\r\n                            style: { textAlign: 'center' }\r\n                        },\r\n                        {\r\n                            Header: \"Top Price 1\",\r\n                            accessor: \"top_price_1\",\r\n                        },\r\n                        {\r\n                            Header: \"Top Price 2\",\r\n                            accessor: \"top_price_2\",\r\n                        },\r\n                        {\r\n                            Header: \"Top Price 3\",\r\n                            accessor: \"top_price_3\",\r\n                        },\r\n                        {\r\n                            Header: \"Top Price 4\",\r\n                            accessor: \"top_price_4\",\r\n                        }\r\n                    ]}\r\n                    className=\"-striped -highlight\"\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { get_historical_bets } from './API'\r\nimport _ from \"lodash\";\r\nimport dateformat  from 'dateformat'\r\nimport {Badge} from 'reactstrap'\r\nimport WebSocket from 'react-websocket'\r\n\r\nconst requestData = async (pageSize, page, sorted, filtered) => {\r\n    let filteredData = await get_historical_bets();\r\n    // You can use the filters in your request, but you are responsible for applying them.\r\n    if (filtered.length) {\r\n        filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\r\n            return filteredSoFar.filter(row => {\r\n                return (row[nextFilter.id] + \"\").includes(nextFilter.value);\r\n            });\r\n        }, filteredData);\r\n    }\r\n\r\n    // You can also use the sorting in your request, but again, you are responsible for applying it.\r\n    const sortedData = _.orderBy(\r\n        filteredData,\r\n        sorted.map(sort => {\r\n            return row => {\r\n                if (row[sort.id] === null || row[sort.id] === undefined) {\r\n                    return -Infinity;\r\n                }\r\n                return typeof row[sort.id] === \"string\"\r\n                    ? row[sort.id].toLowerCase()\r\n                    : row[sort.id];\r\n            };\r\n        }),\r\n        sorted.map(d => (d.desc ? \"desc\" : \"asc\"))\r\n    );\r\n\r\n    const res = {\r\n        rows: sortedData.slice(pageSize * page, pageSize * page + pageSize),\r\n        pages: Math.ceil(filteredData.length / pageSize)\r\n    };\r\n\r\n    return res;\r\n};\r\n\r\nclass HistoricalBet extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.ref_tbl = null\r\n        this.is_mounted = false\r\n        this.is_first = true\r\n\r\n        this.state = {\r\n            data: [],\r\n            pages: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.is_mounted = true\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.is_mounted = false\r\n    }\r\n\r\n    fetch_data = async (state, instance) => {\r\n        if(!this.is_mounted && !this.is_first)\r\n            return\r\n\r\n        let res = await requestData(\r\n            state.pageSize,\r\n            state.page,\r\n            state.sorted,\r\n            state.filtered\r\n        );\r\n\r\n        if(this.is_mounted)\r\n        {\r\n            this.setState({\r\n                data: res.rows,\r\n                pages: res.pages\r\n            });\r\n            this.is_first = false\r\n        }\r\n    }\r\n\r\n    render_result_cell = (cellInfo) => {\r\n        let result = this.state.data[cellInfo.index].result\r\n        let color = \"\"\r\n        if (result === \"Win\")\r\n            color = \"success\"\r\n        else if (result === \"Lose\")\r\n            color = \"danger\"\r\n        else \r\n            color = \"warning\"\r\n\r\n        return (\r\n            <Badge pill color={color} style={{ width: '100%', height: '100%' }}>\r\n                {result}\r\n            </Badge>\r\n        );\r\n    }\r\n\r\n    handleData = (raw_data) => {\r\n        let data = JSON.parse(raw_data)\r\n        if(data.content === 'update_notification')\r\n            this.update_data()\r\n    }\r\n\r\n    update_data = () =>{\r\n        if(!_.isNil(this.ref_tbl))\r\n            this.ref_tbl.fireFetchData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <WebSocket \r\n                    url = {'ws://127.0.0.1:8000/ws/update/'} \r\n                    onMessage = {this.handleData}\r\n                    debug = {true}\r\n            />\r\n            <ReactTable\r\n                ref={(ref_tbl) => {this.ref_tbl = ref_tbl;}}\r\n                manual\r\n                onFetchData={this.fetch_data}\r\n                data={this.state.data}\r\n                pages={this.state.pages}\r\n                filterable\r\n                showPaginationTop={true}\r\n                showPaginationBottom={true}\r\n                showPagination={true}\r\n                pageSizeOptions ={[5, 10, 15, 20, 50, 100]}\r\n                defaultPageSize={15}\r\n                defaultFilterMethod = {(filter, row, column) => {\r\n                    const id = filter.id\r\n                    return row[id] !== undefined ? String(row[id]).includes(filter.value) : true\r\n                  }}\r\n                columns={[\r\n                    {\r\n                        Header: \"No\",\r\n                        accessor: \"id\",\r\n                        filterable: false,\r\n                        minWidth: 50,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Date\",\r\n                        accessor: \"datetime\",\r\n                        Cell: row => dateformat(row.value, 'yyyy-mm-dd'),\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Time\",\r\n                        accessor: \"datetime\",\r\n                        Cell: row => dateformat(row.value, 'HH:MM:ss'),\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Time to Jump\",\r\n                        accessor: \"time_to_jump\",\r\n                    },\r\n                    {\r\n                        Header: \"State\",\r\n                        accessor: \"state\",\r\n                        minWidth: 80,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Venue\",\r\n                        accessor: \"venue\",\r\n                        minWidth: 80,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Race No\",\r\n                        accessor: \"race_number\",\r\n                        minWidth: 80,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Horse No\",\r\n                        accessor: \"horse_number\",\r\n                        minWidth: 80,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Price Taken\",\r\n                        accessor: \"price_taken\",\r\n                        minWidth: 100,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Account\",\r\n                        accessor: \"account_name\",\r\n                    },\r\n                    {\r\n                        Header: \"Bet Amount\",\r\n                        accessor: \"bet_amount\",\r\n                        minWidth: 100,\r\n                        style: { textAlign: 'center' }\r\n                    },\r\n                    {\r\n                        Header: \"Max Profit\",\r\n                        accessor: \"max_profit\",\r\n                    },\r\n                    {\r\n                        Header: \"Result\",\r\n                        accessor: \"result\",\r\n                        minWidth: 80,\r\n                        Cell: this.render_result_cell\r\n                    }\r\n                ]}\r\n                className=\"-striped -highlight\"\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoricalBet;","import React from 'react';\r\nimport moment from 'moment';\r\nimport DateTimeRangeContainer from 'react-advanced-datetimerange-picker';\r\nimport dateFormat from 'dateformat'\r\n\r\nclass PeriodBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start_date: this.props.start,\r\n            end_date: this.props.end,\r\n        };\r\n    }\r\n\r\n    apply_daterange = (from, to) => {\r\n        this.setState({\r\n            start_date: from,\r\n            end_date: to\r\n        })\r\n        this.props.range_changed(from, to);\r\n    }\r\n\r\n    render() {\r\n        let now = new Date();\r\n        let start = moment(new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0));\r\n        let end = moment(start).add(1, \"days\").subtract(1, \"seconds\");\r\n        let ranges = {\r\n            \"Today Only\": [moment(start), moment(end)],\r\n            \"Yesterday Only\": [moment(start).subtract(1, \"days\"), moment(end).subtract(1, \"days\")],\r\n            \"3 Days\": [moment(start).subtract(3, \"days\"), moment(end)]\r\n        }\r\n        let local = {\r\n            \"format\": \"DD-MM-YYYY\",\r\n            \"sundayFirst\": false\r\n        }\r\n        let maxDate = moment(start).add(24, \"hour\")\r\n        return (\r\n                <DateTimeRangeContainer\r\n                    style = {{display:'inline'}}\r\n                    ranges={ranges}\r\n                    start={this.state.start_date}\r\n                    end={this.state.end_date}\r\n                    local={local}\r\n                    maxDate={maxDate}\r\n                    applyCallback={this.apply_daterange}\r\n                >\r\n                    <button className=\"btn btn-secondary\">\r\n                        {dateFormat(this.state.start_date, \"dddd, mmmm dS yyyy\")} ~ {dateFormat(this.state.end_date, \"dddd, mmmm dS yyyy\")}\r\n                    </button>\r\n                </DateTimeRangeContainer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PeriodBoard;","import React from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport PeriodBoard from 'components/dashboard/PeriodBoard'\r\nimport { get_summary } from './API'\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport _ from \"lodash\";\r\nimport moment from 'moment'\r\n\r\n\r\nconst requestData = async (start_date, end_date, pageSize, page, sorted, filtered) => {\r\n    let filteredData = await get_summary(start_date, end_date);\r\n    // You can use the filters in your request, but you are responsible for applying them.\r\n    if (filtered.length) {\r\n        filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\r\n            return filteredSoFar.filter(row => {\r\n                return (row[nextFilter.id] + \"\").includes(nextFilter.value);\r\n            });\r\n        }, filteredData);\r\n    }\r\n\r\n    // You can also use the sorting in your request, but again, you are responsible for applying it.\r\n    const sortedData = _.orderBy(\r\n        filteredData,\r\n        sorted.map(sort => {\r\n            return row => {\r\n                if (row[sort.id] === null || row[sort.id] === undefined) {\r\n                    return -Infinity;\r\n                }\r\n                return typeof row[sort.id] === \"string\"\r\n                    ? row[sort.id].toLowerCase()\r\n                    : row[sort.id];\r\n            };\r\n        }),\r\n        sorted.map(d => (d.desc ? \"desc\" : \"asc\"))\r\n    );\r\n\r\n    const res = {\r\n        rows: sortedData.slice(pageSize * page, pageSize * page + pageSize),\r\n        pages: Math.ceil(filteredData.length / pageSize)\r\n    };\r\n\r\n    return res;\r\n};\r\n\r\n\r\nclass Summary extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        let now = new Date();\r\n        this.start_date = moment(new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0))\r\n        this.end_date = moment(this.start_date).add(1, \"days\").subtract(1, \"seconds\")\r\n        this.state = {\r\n            data: [],\r\n            pages: null\r\n        };\r\n\r\n        this.ref_table = null\r\n    }\r\n\r\n    fetch_data = async (state, instance) => {\r\n        let res = await requestData(\r\n            this.start_date,\r\n            this.end_date,\r\n            state.pageSize,\r\n            state.page,\r\n            state.sorted,\r\n            state.filtered\r\n        );\r\n        this.setState({\r\n            data: res.rows,\r\n            pages: res.pages\r\n        });\r\n    }\r\n\r\n    daterange_changed = (start, end) => {\r\n        this.start_date = start\r\n        this.end_date = end\r\n        this.ref_table.fireFetchData()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container style={{ marginLeft: \"0px\" }}>\r\n                <Row style={{ marginLeft: \"10px\" }}>\r\n                    <PeriodBoard \r\n                        range_changed={this.daterange_changed}\r\n                        start={this.start_date}\r\n                        end={this.end_date} />\r\n                </Row>\r\n                <Row>\r\n                    <div className = \"summary_table\">\r\n                        <ReactTable \r\n                            ref = {(ref_table) => {this.ref_table = ref_table}}\r\n                            onFetchData={this.fetch_data}\r\n                            data={this.state.data}\r\n                            pages={this.state.pages}\r\n                            loading={this.state.loading}\r\n\r\n                            columns={[\r\n                                {\r\n                                    Header: \"Account\",\r\n                                    accessor: \"account\",\r\n                                },\r\n                                {\r\n                                    Header: \"Total Bets\",\r\n                                    accessor: \"total_bets\",\r\n                                },\r\n                                {\r\n                                    Header: \"Total Wins\",\r\n                                    accessor: \"total_wins\",\r\n                                },\r\n                                {\r\n                                    Header: \"Turnover\",\r\n                                    accessor: \"turnover\",\r\n                                },\r\n                                {\r\n                                    Header: \"Returns\",\r\n                                    accessor: \"returns\",\r\n                                },\r\n                                {\r\n                                    Header: \"Profit\",\r\n                                    accessor: \"profit\",\r\n                                },\r\n                                {\r\n                                    Header: \"Strike Rate\",\r\n                                    accessor: \"strike_rate\",\r\n                                },\r\n                                {\r\n                                    Header: \"P.O.T\",\r\n                                    accessor: \"pot\",\r\n                                },\r\n                                {\r\n                                    Header: \"Pending Bets\",\r\n                                    accessor: \"pending_bets\",\r\n                                },\r\n                                {\r\n                                    Header: \"Pending Turnover\",\r\n                                    accessor: \"pending_turnover\",\r\n                                },\r\n                                {\r\n                                    Header: \"Current Position\",\r\n                                    accessor: \"cur_position\",\r\n                                },\r\n                            ]}\r\n                            defaultPageSize={10}\r\n                            className=\"-striped -highlight\"\r\n                        />\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Summary;","import React from 'react';\r\nimport { create_account } from './API'\r\nimport { Button, Form, FormGroup, Label, Input, Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport _ from 'lodash'\r\n\r\nclass AddAccountModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show_modal: false,\r\n            error: false,\r\n            error_msg:'',\r\n            account: '',\r\n            user: null\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return { \r\n            user: props.user,\r\n            show_modal: props.show_modal \r\n        }\r\n    }\r\n\r\n    validate = () => {\r\n        if(this.state.account === \"\")\r\n        {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'Account name can not be empty'\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    on_ok = async () =>{\r\n        if(!this.validate())\r\n            return\r\n        \r\n        let resp = await create_account({\r\n            name: this.state.account\r\n        })\r\n\r\n        if(!_.isNil(resp.id))\r\n        {\r\n            this.props.refresh_accounts()\r\n            this.props.refresh_accounts();\r\n            this.props.toggle();    \r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: _.values(resp)[0]\r\n            })\r\n        }\r\n    }\r\n\r\n    on_cancel = () =>{\r\n        this.props.toggle();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.state.show_modal} \r\n                backdrop={true}>\r\n                <ModalHeader toggle={this.toggle}>Add a new account to user {this.props.user?this.props.user.username:'null'}</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                    <FormGroup className = {!this.state.error?'hidden':''}>\r\n                        <Alert color=\"danger\">{this.state.error_msg}</Alert>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"account_name\">Account Name</Label>\r\n                        <Input type=\"account_name\" name=\"account_name\" onChange={(e)=>{this.setState({account:e.target.value})}}/>\r\n                    </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.on_ok}>Add</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.on_cancel}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddAccountModal;","import React from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport Select from 'react-dropdown-select'\r\nimport {  remove_all_accounts, remove_account, add_transaction } from './API'\r\nimport AddAccountModal from './AddAccountModal'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport DatePicker from 'react-date-picker'\r\nimport {ToastsContainer, ToastsStore} from 'react-toasts'\r\nimport _ from 'lodash'\r\n\r\nclass AccountPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: null,\r\n            open_add_modal: false,\r\n            accounts: [],\r\n            cur_date: new Date(),\r\n            alert_pop: null,\r\n            cur_account : null,\r\n        };\r\n\r\n        this.ref_table = null;\r\n        this.deposit_amount = 0;\r\n        this.deposit_direction = 1;\r\n        this.withdraw_amount = 0;\r\n        this.withdraw_direction = 1;\r\n        this.adjust_amount = 0;\r\n        this.actual_closing = 0;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return {\r\n            user: props.user,\r\n            accounts: props.accounts\r\n        }\r\n    }\r\n\r\n    refresh_accounts = () => {\r\n        this.props.account_changed_handler()\r\n    }\r\n\r\n    add_new_account = () => {\r\n        this.setState({\r\n            open_add_modal: true\r\n        })\r\n    }\r\n\r\n    remove_all_accounts = () => {\r\n        this.show_alert_pop('Are you sure to remove all accounts?',\r\n            async () => {\r\n                await remove_all_accounts()\r\n                this.setState({\r\n                    alert_pop: null\r\n                })\r\n                this.refresh_accounts()\r\n                ToastsStore.success('All accounts are removed.')\r\n            },\r\n            () => { this.setState({ alert: null }) }\r\n        )\r\n    }\r\n\r\n    show_alert_pop = (title, on_confirm, on_cancel) => {\r\n        this.setState({\r\n            alert_pop: <SweetAlert title={title} onCancel={on_cancel} onConfirm={on_confirm} confirmBtnBsStyle='link' cancelBtnBsStyle='primary' showCancel={true} btnSize='sm' />\r\n        })\r\n    }\r\n\r\n    render_edit_btn = (cellInfo) => {\r\n        return (\r\n            <button type=\"button\"\r\n                className=\"btn btn-info\"\r\n                style={{ width: '100%', height: '100%' }}\r\n                onClick={e => {\r\n                    alert('edit ' + cellInfo.index);\r\n                }}\r\n            >\r\n                Edit\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render_remove_btn = (cellInfo) => {\r\n        return (\r\n            <button type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                style={{ width: '100%', height: '100%' }}\r\n                onClick={(e) => {\r\n                    this.show_alert_pop('Are you sure to remove the account?', async () => {\r\n                        this.setState({\r\n                            alert_pop: null\r\n                        })\r\n                        await remove_account(this.state.accounts[cellInfo.index].id)\r\n                        ToastsStore.success(`The account ${this.state.accounts[cellInfo.index].name} are removed.`)\r\n                        this.refresh_accounts()\r\n                    },\r\n                        () => {\r\n                            this.setState({ alert_pop : null })\r\n                        })\r\n                }}\r\n            >\r\n                Remove\r\n            </button>\r\n        );\r\n    }\r\n\r\n    deposit = async () => {\r\n        if(!this.state.cur_account)\r\n        {\r\n            ToastsStore.error(\"Account is not selected\")\r\n            return\r\n        }\r\n        let diff = this.deposit_amount * this.deposit_direction\r\n        if (diff === 0)\r\n            return\r\n        let resp = await add_transaction(\r\n            {\r\n                account: this.state.cur_account.id,\r\n                date: this.state.cur_date,\r\n                amount: diff,\r\n                action: 'Deposit'\r\n            });\r\n        if(!_.isNil(resp.action))\r\n        {\r\n            ToastsStore.success(\"Deposit success\")\r\n            this.refresh_accounts()\r\n        }\r\n        else\r\n            ToastsStore.error(\"Deposit failed\")\r\n    }\r\n\r\n    withdraw = async () => {\r\n        if(!this.state.cur_account)\r\n        {\r\n            ToastsStore.error(\"Account is not selected\")\r\n            return\r\n        }\r\n        let diff = this.withdraw_amount * this.withdraw_direction\r\n        if (diff === 0)\r\n            return\r\n        let resp = await add_transaction(\r\n        {\r\n                account: this.state.cur_account.id,\r\n                date: this.state.cur_date,\r\n                amount: diff,\r\n                action: 'Withdraw'\r\n        });\r\n        if(!_.isNil(resp.action))\r\n        {\r\n            ToastsStore.success(\"Withdraw success\")\r\n            this.refresh_accounts()\r\n        }\r\n        else\r\n            ToastsStore.error(\"Withdraw failed\")\r\n    }\r\n\r\n    adjust = async () => {\r\n        if(!this.state.cur_account)\r\n        {\r\n            ToastsStore.error(\"Account is not selected\")\r\n            return\r\n        }\r\n        let diff = this.adjust_amount\r\n        if (diff === 0)\r\n            return\r\n        let resp = await add_transaction(\r\n        {\r\n                account: this.state.cur_account.id,\r\n                date: this.state.cur_date,\r\n                amount: diff,\r\n                action: 'Adjust'\r\n        });\r\n        if(!_.isNil(resp.action))\r\n        {\r\n            ToastsStore.success(\"Adjust success\")\r\n            this.refresh_accounts()\r\n        }\r\n        else\r\n            ToastsStore.error(\"Adjust failed\")\r\n    }\r\n\r\n    set_actual_closing = async () => {          \r\n        if(!this.state.cur_account)\r\n        {\r\n            ToastsStore.error(\"Account is not selected\")\r\n            return\r\n        }\r\n        let diff = this.actual_closing\r\n        if (diff === 0)\r\n            return\r\n        let resp = await add_transaction(\r\n        {\r\n                account: this.state.cur_account.id,\r\n                date: this.state.cur_date,\r\n                amount: diff,\r\n                action: 'Actual'\r\n        });\r\n        if (!_.isNil(resp.action)) {\r\n            ToastsStore.success(\"Setting autual closing success\")\r\n            this.refresh_accounts()\r\n        }\r\n        else\r\n            ToastsStore.error(\"Setting autual closing failed\")\r\n    }\r\n\r\n    toggle_add_modal = () => {\r\n        this.setState({\r\n            open_add_modal: !this.state.open_add_modal\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const accounts = this.state.accounts;\r\n        return (\r\n            <>\r\n\r\n                {this.state.alert_pop}\r\n                <ToastsContainer store = {ToastsStore}/>\r\n                <AddAccountModal\r\n                    show_modal={this.state.open_add_modal}\r\n                    toggle={this.toggle_add_modal}\r\n                    refresh_accounts={this.refresh_accounts}\r\n                    user={this.state.user} />\r\n                <Tabs>\r\n                    <TabList>\r\n                        <Tab>Accounts</Tab>\r\n                        <Tab>Deposit</Tab>\r\n                        <Tab>Withdraw</Tab>\r\n                        <Tab>Account Adjustment</Tab>\r\n                        <Tab>Actual Closing</Tab>\r\n                    </TabList>\r\n                    <TabPanel>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col className=\"col-md-2\">\r\n                                    <button className=\"btn btn-primary\" onClick={this.add_new_account}>Add new account</button>\r\n                                </Col>\r\n                                <Col>\r\n                                    <button className=\"btn btn-danger\" onClick={this.remove_all_accounts}>Remove all</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <ReactTable\r\n                                ref = {(ref_table)=>{this.ref_table = ref_table;}}\r\n                                data={accounts}\r\n                                showPagination={true}\r\n                                onFetchData={this.props.fetch_accounts}\r\n                                columns={[\r\n                                    {\r\n                                        Header: \"No\",\r\n                                        id: \"No\",\r\n                                        width: 100,\r\n                                        Cell: (row) => {\r\n                                            return <div>{row.index + 1}</div>;\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        Header: \"Account\",\r\n                                        accessor: \"name\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Remove\",\r\n                                        Cell: this.render_remove_btn,\r\n                                        width: 100,\r\n                                    },\r\n                                ]}\r\n                                defaultPageSize={5}\r\n                                className=\"-striped -highlight\"\r\n                            />\r\n                        </Container>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Account</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-3\">\r\n                                <Select\r\n                                    options={this.state.accounts}\r\n                                    values = {this.state.cur_account?[this.state.cur_account]:[]}\r\n                                    onChange={(values) => { \r\n                                        if (values.length > 0) \r\n                                            this.setState({cur_account:values[0]})\r\n                                        \r\n                                    }}\r\n                                    placeholder='Select an account'\r\n                                    labelField='name' valueField='id' />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Date</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <DatePicker clearIcon={null} value={this.state.cur_date} onChange={(date) => { this.setState({ cur_date: date }) }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Amount</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <input type=\"text\" onChange={(e) => { this.deposit_amount = e.target.value; }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: '20px' }}>\r\n                            <Col className=\"col-md-2\">\r\n                                <button className=\"btn btn-primary\" onClick={(e) => { this.deposit_direction = 1; this.deposit(); }} style={{ width: '100%', height: '100%' }}>\r\n                                    Deposit Into\r\n                            </button>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <button className=\"btn btn-danger\" onClick={(e) => { this.deposit_direction = -1; this.deposit(); }} style={{ width: '100%', height: '100%' }}>\r\n                                    Deposit From\r\n                            </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Account</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-3\">\r\n                                <Select\r\n                                    options={this.state.accounts}\r\n                                    values = {this.state.cur_account?[this.state.cur_account]:[]}\r\n                                    onChange={(values) => { \r\n                                        if (values.length > 0) \r\n                                            this.setState({cur_account:values[0]})\r\n                                        \r\n                                    }}\r\n                                    placeholder='Select an account'\r\n                                    labelField='name' valueField='id' />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Date</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <DatePicker clearIcon={null} value={this.state.cur_date} onChange={(date) => { this.setState({ cur_date: date }) }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Amount</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <input type=\"text\" onChange={(e) => { this.withdraw_amount = e.target.value; }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: '20px' }}>\r\n                            <Col className=\"col-md-2\">\r\n                                <button className=\"btn btn-primary\" onClick={(e) => { this.withdraw_direction = 1; this.withdraw(); }} style={{ width: '100%', height: '100%' }}>\r\n                                    Withdraw Into\r\n                            </button>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <button className=\"btn btn-danger\" onClick={(e) => { this.withdraw_direction = -1; this.withdraw(); }} style={{ width: '100%', height: '100%' }}>\r\n                                    Withdraw From\r\n                            </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Account</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-3\">\r\n                                <Select\r\n                                    options={this.state.accounts}\r\n                                    values = {this.state.cur_account?[this.state.cur_account]:[]}\r\n                                    onChange={(values) => {\r\n                                        if (values.length > 0) \r\n                                            this.setState({cur_account:values[0]})\r\n                                        \r\n                                    }}\r\n                                    placeholder='Select an account'\r\n                                    labelField='name' valueField='id' />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Date</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <DatePicker clearIcon={null} value={this.state.cur_date} onChange={(date) => { this.setState({ cur_date: date }) }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Amount</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <input type=\"text\" onChange={(e) => { this.adjust_amount = e.target.value; }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: '20px' }}>\r\n                            <Col className=\"col-md-2\">\r\n                                <button className=\"btn btn-info\" onClick={this.adjust} style={{ width: '100%', height: '100%' }}>\r\n                                    Apply Adjustment\r\n                            </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Account</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-3\">\r\n                                <Select\r\n                                    options={this.state.accounts}\r\n                                    values = {this.state.cur_account?[this.state.cur_account]:[]}\r\n                                    onChange={(values) => {\r\n                                        if (values.length > 0) \r\n                                            this.setState({cur_account:values[0]})\r\n                                        \r\n                                    }}\r\n                                    placeholder='Select an account'\r\n                                    labelField='name' valueField='id' />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Date</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <DatePicker clearIcon={null} value={this.state.cur_date} onChange={(date) => { this.setState({ cur_date: date }) }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col className=\"col-md-1\">\r\n                                <div>Amount</div>\r\n                            </Col>\r\n                            <Col className=\"col-md-2\">\r\n                                <input type=\"text\" onChange={(e) => { this.actual_closing = e.target.value; }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: '20px' }}>\r\n                            <Col className=\"col-md-3\">\r\n                                <button className=\"btn btn-info\" onClick={this.set_actual_closing} style={{ width: '100%', height: '100%' }}>\r\n                                    Set Actual Closing Amount\r\n                            </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPanel>\r\n                </Tabs >\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountPanel;","import React from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\nimport PeriodBoard from 'components/dashboard/PeriodBoard'\r\nimport { get_account_summary } from './API'\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport _ from \"lodash\";\r\nimport moment from 'moment'\r\nimport AccountPanel from './AccountPanel'\r\n\r\n\r\nconst requestData = async (start_date, end_date, pageSize, page, sorted, filtered) => {\r\n\r\n    let filteredData = await get_account_summary(start_date, end_date);\r\n    // You can use the filters in your request, but you are responsible for applying them.\r\n    if (filtered.length) {\r\n        filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\r\n            return filteredSoFar.filter(row => {\r\n                return (row[nextFilter.id] + \"\").includes(nextFilter.value);\r\n            });\r\n        }, filteredData);\r\n    }\r\n\r\n    // You can also use the sorting in your request, but again, you are responsible for applying it.\r\n    const sortedData = _.orderBy(\r\n        filteredData,\r\n        sorted.map(sort => {\r\n            return row => {\r\n                if (row[sort.id] === null || row[sort.id] === undefined) {\r\n                    return -Infinity;\r\n                }\r\n                return typeof row[sort.id] === \"string\"\r\n                    ? row[sort.id].toLowerCase()\r\n                    : row[sort.id];\r\n            };\r\n        }),\r\n        sorted.map(d => (d.desc ? \"desc\" : \"asc\"))\r\n    );\r\n\r\n    const res = {\r\n        rows: sortedData.slice(pageSize * page, pageSize * page + pageSize),\r\n        pages: Math.ceil(filteredData.length / pageSize),\r\n        all_accounts: filteredData\r\n    };\r\n\r\n    return res;\r\n};\r\n\r\n\r\nclass Account extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let now = new Date();\r\n        let start = moment(new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 1));\r\n        let end = moment(start).add(1, \"days\").subtract(2, \"seconds\");\r\n        this.start_date = start\r\n        this.end_date = end\r\n\r\n        this.is_mounted = false\r\n        this.is_first = true\r\n        this.ref_tbl = null\r\n        \r\n        this.state = {\r\n            data: [],\r\n            pages: null,\r\n            accounts:[],\r\n            user: null\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props){\r\n        return {\r\n            user: props.user,\r\n            accounts: props.accounts\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.is_mounted = true\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.is_mounted = false\r\n    }\r\n\r\n    fetch_data = async (state, instance) => {\r\n        if(!this.is_mounted && !this.is_first)\r\n            return\r\n        let res = await requestData(\r\n            this.start_date,\r\n            this.end_date,\r\n            state.pageSize,\r\n            state.page,\r\n            state.sorted,\r\n            state.filtered\r\n        );\r\n\r\n        if(!this.is_mounted)\r\n            return\r\n            \r\n        this.setState({\r\n            data: res.rows,\r\n            pages: res.pages\r\n        });\r\n\r\n        this.is_first = false\r\n        // if(!_.isNil(this.ref_tbl))\r\n        //     _.delay(this.ref_tbl.fireFetchData, 500)\r\n    }\r\n\r\n    daterange_changed = (start, end) => {\r\n        this.start_date = start\r\n        this.end_date = end\r\n        this.ref_tbl.fireFetchData()\r\n    }\r\n\r\n    account_changed = () => {\r\n        this.ref_tbl.fireFetchData()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container style={{ marginLeft: \"0px\" }}>\r\n                <Row style={{ marginLeft: \"10px\" }}>\r\n                    <PeriodBoard \r\n                        range_changed={this.daterange_changed}\r\n                        start={this.start_date}\r\n                        end={this.end_date} />\r\n                </Row>\r\n                <Row>\r\n                    <div>\r\n                        <ReactTable\r\n                            ref={(ref_tbl) => {this.ref_tbl = ref_tbl;}}\r\n                            onFetchData={this.fetch_data}\r\n                            data={this.state.data}\r\n                            pages={this.state.pages}\r\n                            columns={[\r\n                                {\r\n                                    Header: \"Account\",\r\n                                    accessor: \"account\",\r\n                                },\r\n                                {\r\n                                    Header: \"Opening Balance\",\r\n                                    accessor: \"opening_balance\",\r\n                                },\r\n                                {\r\n                                    Header: \"Deposit\",\r\n                                    accessor: \"deposit\",\r\n                                },\r\n                                {\r\n                                    Header: \"Withdrawl\",\r\n                                    accessor: \"withdrawl\",\r\n                                },\r\n                                {\r\n                                    Header: \"Account Adjustments\",\r\n                                    accessor: \"adjustments\",\r\n                                },\r\n                                {\r\n                                    Header: \"Closing Balance\",\r\n                                    accessor: \"closing_balance\",\r\n                                },\r\n                                {\r\n                                    Header: \"Actual Closing Balance\",\r\n                                    accessor: \"actual_closing_balance\",\r\n                                },\r\n                                {\r\n                                    Header: \"Movement\",\r\n                                    accessor: \"movement\",\r\n                                },\r\n                            ]}\r\n                            defaultPageSize={10}\r\n                            className=\"-striped -highlight\"\r\n                        />\r\n                    </div>\r\n                </Row>\r\n                <AccountPanel \r\n                    user = {this.state.user}\r\n                    fetch_accounts = {this.fetch_accounts}\r\n                    accounts = {this.state.accounts.slice(0,10)}\r\n                    account_changed_handler = {this.account_changed}\r\n                />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Account;","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport Sidebar from 'components/layouts/Sidebar';\r\nimport Notification from 'components/dashboard/Notification'\r\nimport HistoricalBet from './HistoricalBet';\r\nimport Summary from './Summary';\r\nimport Account from './Account';\r\nimport Clock from 'react-live-clock';\r\nimport {get_accounts} from './API'\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            tab: 'Notification',\r\n            expanded: false,\r\n            accounts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh_accounts()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return { \r\n            user : props.user\r\n        };\r\n    }\r\n\r\n    fetch_accounts = async () => {\r\n        let resp = await get_accounts()\r\n        this.setState({\r\n            accounts: resp\r\n        })\r\n    }\r\n\r\n    refresh_accounts = () => {\r\n        this.fetch_accounts()\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className = 'dashboard_main'>\r\n                    <Sidebar tab={this.state.tab} className='col'\r\n                        user = {this.state.user}\r\n                        expanded={this.state.expanded}\r\n                        tab_changed={this.tab_changed}\r\n                        expanded_changed={this.expanded_changed}\r\n                    />\r\n                    <Container className='col dashboard_region' style={{ marginLeft: this.state.expanded ? 240 : 64, height: \"100%\", width: this.state.expanded ? 'calc(100% - 240px)' : 'calc(100% - 64px)' }}>\r\n                        <Row className='dashboard_region_header jumbotron jumbotron-fluid bg-dark text-white'>\r\n                            <Col>\r\n                                <h2 className='col-md-6'>{this.state.tab}</h2>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right' }} >\r\n                                <Clock className='col-md-6' format={'MMMM D YYYY HH:mm:ss'} ticking={true} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        {\r\n                            (() => {\r\n                                switch (this.state.tab) {\r\n                                    case 'Notification':\r\n                                        return (\r\n                                            <Notification user = {this.state.user} accounts = {this.state.accounts}/>\r\n                                        );\r\n                                    case 'Historical Bets':\r\n                                        return (\r\n                                            <HistoricalBet user = {this.state.user} accounts = {this.state.accounts}/>\r\n                                        );\r\n                                    case 'Summary':\r\n                                        return (\r\n                                            <Summary user = {this.state.user} accounts = {this.state.accounts}/>\r\n                                        );\r\n                                    case 'Account':\r\n                                        return (\r\n                                            <Account user = {this.state.user} accounts = {this.state.accounts} refresh_accounts = {this.refresh_accounts}/>\r\n                                        );\r\n                                    default:\r\n                                        return (<></>);\r\n                                }\r\n                            })()\r\n                        }\r\n                        </Row>\r\n                    </Container>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n\r\n    tab_changed = (new_tab) => {\r\n        this.setState({\r\n            tab: new_tab\r\n        })\r\n    }\r\n\r\n    expanded_changed = (expanded) => {\r\n        this.setState({\r\n            expanded: expanded\r\n        })\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport AuthService from './AuthService'\nimport Login from './auth/Login'\nimport Signup from './auth/Signup'\nimport Dashboard from './dashboard/Dashboard'\n\nconst Auth = new AuthService();\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user : null\n    }\n  }\n\n  logged_in = (user) =>{\n    this.setState({\n      user:user\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <div className=\"min-height-600\">\n              <PrivateRoute exact path=\"/\" component={() => <Dashboard user={this.state.user}/>}/>\n              <Route path=\"/login\" component={() => <Login logged_in={this.logged_in}/>}/>\n              <Route path='/signup' component={Signup} />\n              <PrivateRoute path='/dashboard' component={() => <Dashboard user={this.state.user}/>}/>\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={\n      props => Auth.loggedIn() ?\n        (<Component {...props} />) :\n        (<Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />)\n    }\n  />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}